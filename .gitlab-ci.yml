include:
  - project: "zl0i/gitlab-ci-template"
    ref: main
    file: "build.template.yaml"
  - project: "zl0i/gitlab-ci-template"
    ref: main
    file: "deploy.template.yaml"

stages:
  - build
  - release
  - deploy

build:
  extends: .docker
  rules:
    - if: $CI_COMMIT_TAG == null
    - if: $CI_COMMIT_BRANCH == "master"
      variables:
        BUILD_ARGS: '--build-arg API_URL=https://zloi.space'
    - if: $CI_COMMIT_BRANCH
      variables:
        BUILD_ARGS: '--build-arg API_URL=https://${CI_COMMIT_BRANCH}.zloi.space'
  variables:
    BUILD_DIR: "./web"
    IMAGE_NAME: zloi-web

.deploy:
  stage: deploy
  image: lwolf/helm-kubectl-docker:v1.21.1-v3.6.0
  before_script:
    - kubectl config set-cluster my-cluster --server="$K3S_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$K3S_TOKEN"
    - kubectl config set-context default-context --cluster=my-cluster --user=admin
    - kubectl config use-context default-context
  script:
    - helm upgrade --install $CI_PROJECT_NAME .helm
      --set image.tag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
      --set branch=${CI_COMMIT_BRANCH}
      --debug
      --atomic
      --timeout 120s
      --namespace ${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}
      --create-namespace

deploy_dev:
  extends: .deploy
  environment:
    name: ${CI_COMMIT_BRANCH}
    url: https://${CI_COMMIT_BRANCH}.zloi.space
    deployment_tier: development
    on_stop: stop_dev_deploy
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null

deploy_production:
  extends: .deploy
  environment:
    name: production
    url: https://zloi.space
    deployment_tier: production
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null

stop_dev_deploy:
  stage: deploy
  image: lwolf/helm-kubectl-docker:v1.21.1-v3.6.0
  environment:
    name: ${CI_COMMIT_BRANCH}
    action: stop
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
  before_script:
    - kubectl config set-cluster my-cluster --server="$K3S_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$K3S_TOKEN"
    - kubectl config set-context default-context --cluster=my-cluster --user=admin
    - kubectl config use-context default-context
  script:
    - helm uninstall $CI_PROJECT_NAME
      --timeout 120s
      --debug
      --namespace ${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}
    - kubectl delete ns ${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}
  when: manual

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Running release for $CI_COMMIT_TAG tag"
  release:
    name: "Release $CI_COMMIT_TAG"
    description: "Created using the release-cli $CI_COMMIT_DESCRIPTION"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_TAG"
